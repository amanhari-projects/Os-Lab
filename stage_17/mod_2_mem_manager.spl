//print "--memory manager--";
//R1 = pid R2 = funcnum R3 = argument R0 = return

alias funcnum R2;

if(funcnum==1)  then        //get free page
    [SYSTEM_STATUS_TABLE+3] = [SYSTEM_STATUS_TABLE+3]+1;
    while([SYSTEM_STATUS_TABLE+2]==0)   do
        [PROCESS_TABLE+(R1*16)+4] = WAIT_MEM;
        multipush(R1,R2,R3);
        call MOD_5;
        multipop(R1,R2,R3,R4);
    endwhile;
    [SYSTEM_STATUS_TABLE+3] = [SYSTEM_STATUS_TABLE+3]-1;
    [SYSTEM_STATUS_TABLE+2] = [SYSTEM_STATUS_TABLE+2]-1;

    alias val R4;
    val = 0;
    while(val<128) do
        if([MEMORY_FREE_LIST + val]==0) then
            [MEMORY_FREE_LIST + val] = 1;
            break;
        endif;
    val=val+1;
    endwhile;
    R0 = val;
    return;
else if(funcnum == 2)   then
    //print "--free pg--";
    breakpoint;
    [MEMORY_FREE_LIST + R3] = [MEMORY_FREE_LIST + R3] - 1;
        if([MEMORY_FREE_LIST + R3]==0)  then
            [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] +1;
            alias val R4;
            alias regval R5;
            val=MAX_PROC_NUM;
            while(val>0)   do
                regval = PROCESS_TABLE+(val-1)*16+4;
                if([regval] == WAIT_MEM)  then
                    [regval] = READY;
                endif;
                val=val-1;
            endwhile;
            //print "======pgtbl===";
            breakpoint;
        endif;
    return;
    endif;
endif;