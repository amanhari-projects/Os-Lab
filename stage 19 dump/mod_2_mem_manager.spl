print "--memory manager--";
//R1 = pid 
//R2 = funcnum 
//R3 = argument 
//R0 = return

alias funcnum R2;

if(funcnum==1)  then        //get free page
    [SYSTEM_STATUS_TABLE+3] = [SYSTEM_STATUS_TABLE+3]+1;
    while([SYSTEM_STATUS_TABLE+2]==0)   do
        [PROCESS_TABLE+(R1*16)+4] = WAIT_MEM;
        multipush(R1,R2,R3);
        call MOD_5;
        multipop(R1,R2,R3,R4);
    endwhile;
    [SYSTEM_STATUS_TABLE+3] = [SYSTEM_STATUS_TABLE+3]-1;
    [SYSTEM_STATUS_TABLE+2] = [SYSTEM_STATUS_TABLE+2]-1;

    alias val R4;
    val = 0;
    while(val<128) do
        if([MEMORY_FREE_LIST + val]==0) then
            [MEMORY_FREE_LIST + val] = 1;
            break;
        endif;
    val=val+1;
    endwhile;
    R0 = val;
    return;
else if(funcnum == 2)   then
    //print "--free pg--";
    breakpoint;
    [MEMORY_FREE_LIST + R3] = [MEMORY_FREE_LIST + R3] - 1;
        if([MEMORY_FREE_LIST + R3]==0)  then
            [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] +1;
            alias val R4;
            alias regval R5;
            val=MAX_PROC_NUM;
            while(val>0)   do
                regval = PROCESS_TABLE+(val-1)*16+4;
                if([regval] == WAIT_MEM)  then
                    [regval] = READY;
                endif;
                val=val-1;
            endwhile;
            //print "======pgtbl===";
            breakpoint;
        else 
            if(funcnum==5) then
                alias val R6;
                alias reg R7;
                val = 0;
                while(val<MAX_PROC_NUM)    do
                    reg = [DISK_MAP_TABLE + val*10 + 4];
                    if([reg]==R4) then
                        alias ptb R8;
                        ptb = [PROCESS_TABLE+(val*16)+14];
                        R0 = [ptb+8];
                        [MEMORY_FREE_LIST+R0] = [MEMORY_FREE_LIST+R0]+1;
                        return;
                    endif;
                    reg = [DISK_MAP_TABLE + val*10 + 5];
                    if([reg]==R4) then
                        alias ptb R8;
                        ptb = [PROCESS_TABLE+(val*16)+14];
                        R0 = [ptb+10];
                        [MEMORY_FREE_LIST+R0] = [MEMORY_FREE_LIST+R0]+1;
                        return;
                    endif;
                    reg = [DISK_MAP_TABLE + val*10 + 6];
                    if([reg]==R4) then
                        alias ptb R8;
                        ptb = [PROCESS_TABLE+(val*16)+14];
                        R0 = [ptb+12];
                        [MEMORY_FREE_LIST+R0] = [MEMORY_FREE_LIST+R0]+1;
                        return;
                    endif;
                    reg = [DISK_MAP_TABLE + val*10 + 7];
                    if([reg]==R4) then
                        alias ptb R8;
                        ptb = [PROCESS_TABLE+(val*16)+14];
                        R0 = [ptb+14];
                        [MEMORY_FREE_LIST+R0] = [MEMORY_FREE_LIST+R0]+1;
                        return;
                    endif;
                    val=val+1;
                endwhile;
                multipush(R1,R2,R3,R4,R5);
                R2 = 1;
                call MEMORY_MANAGER;
                multipop(R1,R2,R3,R4,R5);
                R8 = R4;
                R9 = R1;
                R10 = R0;
                multipush(R1,R2,R3,R4,R5,R10);
                R1 = 2;
                R2 = R1;
                R3 = 0;
                R4 = R0;
                R5 = R8;
                call MOD_4;
                multipop(R1,R2,R3,R4,R5,R10);
                R0 = R10;
                return;
            endif;
        endif;
    return;
    endif;
endif;